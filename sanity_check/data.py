# coding=utf-8
import os


def normalize_data(data):
    return [os.path.normpath(d) for d in data]


languages = [
    "aa",
    "ab",
    "af",
    "ak",
    "sq",
    "am",
    "ar",
    "an",
    "hy",
    "as",
    "av",
    "ae",
    "ay",
    "az",
    "ba",
    "bm",
    "eu",
    "be",
    "bn",
    "bh",
    "bi",
    "bo",
    "bs",
    "br",
    "bg",
    "my",
    "ca",
    "cs",
    "ch",
    "ce",
    "zh",
    "cu",
    "cv",
    "kw",
    "co",
    "cr",
    "cy",
    "cs",
    "da",
    "de",
    "dv",
    "nl",
    "dz",
    "el",
    "en",
    "eo",
    "et",
    "eu",
    "ee",
    "fo",
    "fa",
    "fj",
    "fi",
    "fr",
    "fy",
    "ff",
    "Ga",
    "de",
    "gd",
    "ga",
    "gl",
    "gv",
    "el",
    "gn",
    "gu",
    "ht",
    "ha",
    "he",
    "hz",
    "hi",
    "ho",
    "hr",
    "hu",
    "hy",
    "ig",
    "is",
    "io",
    "ii",
    "iu",
    "ie",
    "ia",
    "id",
    "ik",
    "is",
    "it",
    "jv",
    "ja",
    "kl",
    "kn",
    "ks",
    "ka",
    "kr",
    "kk",
    "km",
    "ki",
    "rw",
    "ky",
    "kv",
    "kg",
    "ko",
    "kj",
    "ku",
    "lo",
    "la",
    "lv",
    "li",
    "ln",
    "lt",
    "lb",
    "lu",
    "lg",
    "mk",
    "mh",
    "ml",
    "mi",
    "mr",
    "ms",
    "Mi",
    "mk",
    "mg",
    "mt",
    "mn",
    "mi",
    "ms",
    "my",
    "na",
    "nv",
    "nr",
    "nd",
    "ng",
    "ne",
    "nl",
    "nn",
    "nb",
    "no",
    "oc",
    "oj",
    "or",
    "om",
    "os",
    "pa",
    "fa",
    "pi",
    "pl",
    "pt",
    "ps",
    "qu",
    "rm",
    "ro",
    "ro",
    "rn",
    "ru",
    "sg",
    "sa",
    "si",
    "sk",
    "sk",
    "sl",
    "se",
    "sm",
    "sn",
    "sd",
    "so",
    "st",
    "es",
    "sq",
    "sc",
    "sr",
    "ss",
    "su",
    "sw",
    "sv",
    "ty",
    "ta",
    "tt",
    "te",
    "tg",
    "tl",
    "th",
    "bo",
    "ti",
    "to",
    "tn",
    "ts",
    "tk",
    "tr",
    "tw",
    "ug",
    "uk",
    "ur",
    "uz",
    "ve",
    "vi",
    "vo",
    "cy",
    "wa",
    "wo",
    "xh",
    "yi",
    "yo",
    "za",
    "zh",
    "zu",
]

countries = [
    "AF",
    "AX",
    "AL",
    "DZ",
    "AS",
    "AD",
    "AO",
    "AI",
    "AQ",
    "AG",
    "AR",
    "AM",
    "AW",
    "AU",
    "AT",
    "AZ",
    "BS",
    "BH",
    "BD",
    "BB",
    "BY",
    "BE",
    "BZ",
    "BJ",
    "BM",
    "BT",
    "BO",
    "BQ",
    "BA",
    "BW",
    "BV",
    "BR",
    "IO",
    "BN",
    "BG",
    "BF",
    "BI",
    "KH",
    "CM",
    "CA",
    "CV",
    "KY",
    "CF",
    "TD",
    "CL",
    "CN",
    "CX",
    "CC",
    "CO",
    "KM",
    "CG",
    "CD",
    "CK",
    "CR",
    "CI",
    "HR",
    "CU",
    "CW",
    "CY",
    "CZ",
    "DK",
    "DJ",
    "DM",
    "DO",
    "EC",
    "EG",
    "SV",
    "GQ",
    "ER",
    "EE",
    "ET",
    "FK",
    "FO",
    "FJ",
    "FI",
    "FR",
    "GF",
    "PF",
    "TF",
    "GA",
    "GM",
    "GE",
    "DE",
    "GH",
    "GI",
    "GR",
    "GL",
    "GD",
    "GP",
    "GU",
    "GT",
    "GG",
    "GN",
    "GW",
    "GY",
    "HT",
    "HM",
    "VA",
    "HN",
    "HK",
    "HU",
    "IS",
    "IN",
    "ID",
    "IR",
    "IQ",
    "IE",
    "IM",
    "IL",
    "IT",
    "JM",
    "JP",
    "JE",
    "JO",
    "KZ",
    "KE",
    "KI",
    "KP",
    "KR",
    "KW",
    "KG",
    "LA",
    "LV",
    "LB",
    "LS",
    "LR",
    "LY",
    "LI",
    "LT",
    "LU",
    "MO",
    "MK",
    "MG",
    "MW",
    "MY",
    "MV",
    "ML",
    "MT",
    "MH",
    "MQ",
    "MR",
    "MU",
    "YT",
    "MX",
    "FM",
    "MD",
    "MC",
    "MN",
    "ME",
    "MS",
    "MA",
    "MZ",
    "MM",
    "NA",
    "NR",
    "NP",
    "NL",
    "NC",
    "NZ",
    "NI",
    "NE",
    "NG",
    "NU",
    "NF",
    "MP",
    "NO",
    "OM",
    "PK",
    "PW",
    "PS",
    "PA",
    "PG",
    "PY",
    "PE",
    "PH",
    "PN",
    "PL",
    "PT",
    "PR",
    "QA",
    "RE",
    "RO",
    "RU",
    "RW",
    "BL",
    "SH",
    "KN",
    "LC",
    "MF",
    "PM",
    "VC",
    "WS",
    "SM",
    "ST",
    "SA",
    "SN",
    "RS",
    "SC",
    "SL",
    "SG",
    "SX",
    "SK",
    "SI",
    "SB",
    "SO",
    "ZA",
    "GS",
    "SS",
    "ES",
    "LK",
    "SD",
    "SR",
    "SJ",
    "SZ",
    "SE",
    "CH",
    "SY",
    "TW",
    "TJ",
    "TZ",
    "TH",
    "TL",
    "TG",
    "TK",
    "TO",
    "TT",
    "TN",
    "TR",
    "TM",
    "TC",
    "TV",
    "UG",
    "UA",
    "AE",
    "GB",
    "US",
    "UM",
    "UY",
    "UZ",
    "VU",
    "VE",
    "VN",
    "VG",
    "VI",
    "WF",
    "EH",
    "YE",
    "ZM",
    "ZW",
]

BP_FOLDERS = [
    "animation_controllers",
    "animations",
    "biomes",
    "blocks",
    "entities",
    "feature_rules",
    "features",
    "functions",
    "items",
    "loot_tables",
    "recipes",
    "scripts",
    "spawn_rules",
    "structures",
    "texts",
    "trading",
    "volumes",
    "dialogue",
]

BP_FILES = normalize_data(
    [
        "manifest.json",
        "pack_icon.png",
        "texts/languages.json",
        "texts/language_names.json",
        "contents.json",
        "functions/tick.json",
    ]
)

RP_FOLDERS = [
    "animation_controllers",
    "animations",
    "attachables",
    "entity",
    "fogs",
    "items",
    "materials",
    "models",
    "particles",
    "render_controllers",
    "sounds",
    "textures",
    "texts",
    "ui",
    "font",
    "cameras",
]

RP_FILES = normalize_data(
    [
        "manifest.json",
        "pack_icon.png",
        "biomes_client.json",
        "blocks.json",
        "sounds.json",
        "contents.json",
        "sounds/sound_definitions.json",
        "sounds/music_definitions.json",
        "texts/languages.json",
        "texts/language_names.json",
        "textures/item_texture.json",
        "textures/terrain_texture.json",
        "textures/textures_list.json",
        "textures/flipbook_textures.json",
    ]
)

BOM_EXTENSIONS = [".mcfunction", ".json", ".lang"]

MISSPELLING_THRESHOLD = 3
