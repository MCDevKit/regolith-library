const process = require("process");
const fs = require("fs");
const path = require("path");

const root = process.env.ROOT_DIR;

if (!root) {
  console.error("ROOT_DIR not set");
  process.exit(1);
}

// From: https://stackoverflow.com/a/5827895
var walk = function (dir, done) {
  var results = [];
  fs.readdir(dir, function (err, list) {
    if (err) return done(err);
    var i = 0;
    (function next() {
      var file = list[i++];
      if (!file) return done(null, results);
      file = path.resolve(dir, file);
      fs.stat(file, function (err, stat) {
        if (stat && stat.isDirectory()) {
          walk(file, function (err, res) {
            results = results.concat(res);
            next();
          });
        } else {
          results.push(file);
          next();
        }
      });
    })();
  });
};

walk(path.join("BP", "entities"), function (err, results) {
  if (err) throw err;
  let output = "## Generated by mcdef_gen\n";
  for (const file of results) {
    if (!file.endsWith(".json")) continue;
    let contents = JSON.parse(fs.readFileSync(file, "utf8"));
    if (
      contents["minecraft:entity"] &&
      contents["minecraft:entity"]["description"] &&
      contents["minecraft:entity"]["description"]["identifier"]
    ) {
      if (contents["minecraft:entity"]["description"]["identifier"].startsWith("minecraft:")) continue;
      let id = contents["minecraft:entity"]["description"]["identifier"];
      output += `entity=${id}\n`;
    }
  }
  if (fs.existsSync(path.join(root, ".mcdefinitions"))) {
    let lines = fs
      .readFileSync(path.join(root, ".mcdefinitions"), "utf8")
      .split("\n");
    let newLines = [];
    for (const line of lines) {
      if (line.startsWith("## Generated by mcdef_gen")) break;
      newLines.push(line);
    }
    output = newLines.join("\n") + "\n" + output;
  }
  fs.writeFileSync(path.join(root, ".mcdefinitions"), output);
  console.log("Generated .mcdefinitions");
});
